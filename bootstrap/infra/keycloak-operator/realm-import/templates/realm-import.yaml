apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: openshift-realm-import
  labels:
    app: sso
  namespace: keycloak
spec:
  keycloakCRName: keycloak
  realm:
    id: openshift
    realm: openshift
    displayName: OpenShift
    sslRequired: external
    registrationAllowed: false
    registrationEmailAsUsername: false
    rememberMe: false
    verifyEmail: false
    loginWithEmailAllowed: true
    duplicateEmailsAllowed: false
    resetPasswordAllowed: false
    editUsernameAllowed: false
    bruteForceProtected: false
    permanentLockout: false
    maxFailureWaitSeconds: 900
    minimumQuickLoginWaitSeconds: 60
    waitIncrementSeconds: 60
    quickLoginCheckMilliSeconds: 1000
    maxDeltaTimeSeconds: 43200
    failureFactor: 30
    clientScopes:
    - id: 2a5a94a0-df91-4a8c-b676-a519bc9e5cfd
      name: groups
      description: Groups
      protocol: openid-connect
      attributes:
        include.in.token.scope: 'true'
        display.on.consent.screen: 'true'
        gui.order: ''
        consent.screen.text: ''
      protocolMappers:
      - id: ddade498-fdd4-4ba8-822a-0c0a08243ccd
        name: groups
        protocol: openid-connect
        protocolMapper: oidc-group-membership-mapper
        consentRequired: false
        config:
          full.path: 'false'
          userinfo.token.claim: 'true'
          multivalued: 'true'
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: groups
    clients:
    - id: 2cc7ef7e-1a34-4caa-a4ec-9a3d08bf7dc8
      clientId: argocd
      name: Argo CD
      description: 'Argo CD'
      rootUrl: https://${SUB_DOMAIN}
      adminUrl: https://${SUB_DOMAIN}
      baseUrl: https://${SUB_DOMAIN}
      surrogateAuthRequired: false
      enabled: true
      alwaysDisplayInConsole: false
      clientAuthenticatorType: client-secret
      redirectUris:
      - https://openshift-gitops-server-openshift-gitops.${SUB_DOMAIN}/*
      - https://argocd-server-gitops.apps.${SUB_DOMAIN}/*
      - http://localhost:8085/auth/callback
      webOrigins:
      - "*"
      notBefore: 0
      bearerOnly: false
      consentRequired: false
      standardFlowEnabled: true
      implicitFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: false
      publicClient: true
      frontchannelLogout: true
      protocol: openid-connect
      attributes:
        client.secret.creation.time: '1690755514'
        oauth2.device.authorization.grant.enabled: 'false'
        backchannel.logout.revoke.offline.tokens: 'false'
        use.refresh.tokens: 'true'
        oidc.ciba.grant.enabled: 'false'
        backchannel.logout.session.required: 'true'
        client_credentials.use_refresh_token: 'false'
        tls.client.certificate.bound.access.tokens: 'false'
        require.pushed.authorization.requests: 'false'
        acr.loa.map: "{}"
        display.on.consent.screen: 'false'
        token.response.type.bearer.lower-case: 'false'
      authenticationFlowBindingOverrides: {}
      fullScopeAllowed: true
      nodeReRegistrationTimeout: -1
      defaultClientScopes:
      - web-origins
      - acr
      - profile
      - roles
      - groups
      - email
      optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt
    - id: 31c5e818-0aca-4ba5-b7ee-2266b9c70daf
      clientId: openshift
      name: openshift
      description: OpenShift Authentication
      rootUrl: https://ocplab.com
      adminUrl: ''
      baseUrl: https://ocplab.com
      surrogateAuthRequired: false
      enabled: true
      alwaysDisplayInConsole: false
      clientAuthenticatorType: client-secret
      secret: 75befbcf-75de-4933-aea7-e819921a83e1
      redirectUris:
      - https://oauth-openshift.apps.({ $.Values.sub_domain }}/*
      webOrigins:
      - "*"
      notBefore: 0
      bearerOnly: false
      consentRequired: false
      standardFlowEnabled: true
      implicitFlowEnabled: false
      directAccessGrantsEnabled: false
      serviceAccountsEnabled: false
      publicClient: false
      frontchannelLogout: true
      protocol: openid-connect
      attributes:
        client.secret.creation.time: '1690676233'
        post.logout.redirect.uris: https://console-openshift-console.({ $.Values.sub_domain }}
        oauth2.device.authorization.grant.enabled: 'false'
        backchannel.logout.revoke.offline.tokens: 'false'
        use.refresh.tokens: 'true'
        oidc.ciba.grant.enabled: 'false'
        backchannel.logout.session.required: 'true'
        client_credentials.use_refresh_token: 'false'
        tls.client.certificate.bound.access.tokens: 'false'
        require.pushed.authorization.requests: 'false'
        acr.loa.map: "{}"
        display.on.consent.screen: 'false'
        token.response.type.bearer.lower-case: 'false'
      authenticationFlowBindingOverrides: {}
      fullScopeAllowed: true
      nodeReRegistrationTimeout: -1
      defaultClientScopes:
      - web-origins
      - acr
      - profile
      - roles
      - groups
      - email
      optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt
    groups:
      - id: developers
        name: developers
        path: /developers
    users:
{{- range untilStep 1 (int ($.Values.users | add 1)) 1 }}
      - id: user{{ . }}
        username: user{{ . }}
        enabled: true
        groups:
          - developers
        credentials:
        - type: password
          hashedSaltedValue: 5Mhqu6I43dSlDqVzpbv5yVjMYrTKOY4mbTwJu+1B0SA=
          salt: rkNa/C8CumJNCka2cm5FtQ==
          hashIterations: 27500
          counter: 0
          algorithm: pbkdf2-sha256
          digits: 0
          period: 0
{{- end }}
