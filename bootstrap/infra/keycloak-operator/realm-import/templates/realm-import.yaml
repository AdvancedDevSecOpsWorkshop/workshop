apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: openshift-realm-import
  labels:
    app: sso
  namespace: keycloak
spec:
  keycloakCRName: keycloak
  realm:
    id: openshift
    realm: openshift
    displayName: OpenShift
    enabled: true
    sslRequired: external
    registrationAllowed: false
    registrationEmailAsUsername: false
    rememberMe: false
    verifyEmail: false
    loginWithEmailAllowed: true
    duplicateEmailsAllowed: false
    resetPasswordAllowed: false
    editUsernameAllowed: false
    bruteForceProtected: false
    permanentLockout: false
    maxFailureWaitSeconds: 900
    minimumQuickLoginWaitSeconds: 60
    waitIncrementSeconds: 60
    quickLoginCheckMilliSeconds: 1000
    maxDeltaTimeSeconds: 43200
    failureFactor: 30
    clientScopes:
    - id: 45468e71-b1c1-414b-92d9-a5cba9d2c054
      name: profile
      description: 'OpenID Connect built-in scope: profile'
      protocol: openid-connect
      attributes:
        include.in.token.scope: 'true'
        display.on.consent.screen: 'true'
        consent.screen.text: "${profileScopeConsentText}"
      protocolMappers:
      - id: f93a5c77-6f68-4590-afe1-bd50ae42e8b4
        name: given name
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: firstName
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: given_name
          jsonType.label: String
      - id: 826961b0-f2be-4561-b4f3-e8ff69e90004
        name: birthdate
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: birthdate
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: birthdate
          jsonType.label: String
      - id: 7bd86a9f-c040-4a7f-b055-631a8366e05c
        name: family name
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: lastName
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: family_name
          jsonType.label: String
      - id: 1abf3a40-bddc-44ef-bf80-21d9b2809b1a
        name: locale
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: locale
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: locale
          jsonType.label: String
      - id: da3768dd-385d-4575-88f4-4492c04c8e9e
        name: updated at
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: updatedAt
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: updated_at
          jsonType.label: long
      - id: d2dd9c31-5f45-415b-a725-f7d5408435fd
        name: profile
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: profile
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: profile
          jsonType.label: String
      - id: 246e526b-982c-4df7-bb2a-0a14294c2e30
        name: zoneinfo
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: zoneinfo
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: zoneinfo
          jsonType.label: String
      - id: 1947e58f-1a7c-4931-a1f4-110abd42bb80
        name: username
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: username
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: preferred_username
          jsonType.label: String
      - id: 40e0f915-d948-4039-93eb-419dee4268c4
        name: middle name
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: middleName
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: middle_name
          jsonType.label: String
      - id: b0c311d1-c0f6-4b9d-9e5c-88d627e2a285
        name: website
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: website
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: website
          jsonType.label: String
      - id: 2db212f7-4a33-4d78-aff9-aa37c2d3cb66
        name: gender
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: gender
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: gender
          jsonType.label: String
      - id: 1166667a-3be0-44a0-ad95-8e7eb4423e83
        name: picture
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: picture
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: picture
          jsonType.label: String
      - id: f0cbd162-a6e6-4f67-9151-638eef47105f
        name: full name
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        consentRequired: false
        config:
          id.token.claim: 'true'
          access.token.claim: 'true'
          userinfo.token.claim: 'true'
      - id: de961376-4615-40ea-98ba-b21f8f179130
        name: nickname
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: nickname
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: nickname
          jsonType.label: String
    - id: b849b10a-7588-47e3-b40c-a1c907e71177
      name: acr
      description: OpenID Connect scope for add acr (authentication context class reference)
        to the token
      protocol: openid-connect
      attributes:
        include.in.token.scope: 'false'
        display.on.consent.screen: 'false'
      protocolMappers:
      - id: 70198400-2d5d-4bbd-849a-35ec3731bc60
        name: acr loa level
        protocol: openid-connect
        protocolMapper: oidc-acr-mapper
        consentRequired: false
        config:
          id.token.claim: 'true'
          access.token.claim: 'true'
    - id: 1d9aa7e7-6b01-4936-8991-110359bda9da
      name: roles
      description: OpenID Connect scope for add user roles to the access token
      protocol: openid-connect
      attributes:
        include.in.token.scope: 'false'
        display.on.consent.screen: 'true'
        consent.screen.text: "${rolesScopeConsentText}"
      protocolMappers:
      - id: 3f9dddc8-d0b4-4930-9caa-dfe977947254
        name: client roles
        protocol: openid-connect
        protocolMapper: oidc-usermodel-client-role-mapper
        consentRequired: false
        config:
          user.attribute: foo
          access.token.claim: 'true'
          claim.name: resource_access.${client_id}.roles
          jsonType.label: String
          multivalued: 'true'
      - id: 672dc1c3-4c10-4a8a-b427-31003d081621
        name: realm roles
        protocol: openid-connect
        protocolMapper: oidc-usermodel-realm-role-mapper
        consentRequired: false
        config:
          user.attribute: foo
          access.token.claim: 'true'
          claim.name: realm_access.roles
          jsonType.label: String
          multivalued: 'true'
      - id: 0022d8b5-c28f-46b7-bf83-8b1696453e63
        name: audience resolve
        protocol: openid-connect
        protocolMapper: oidc-audience-resolve-mapper
        consentRequired: false
        config: {}
    - id: 75bdd0a0-8f5c-4c54-83d5-e59b9f994c5a
      name: email
      description: 'OpenID Connect built-in scope: email'
      protocol: openid-connect
      attributes:
        include.in.token.scope: 'true'
        display.on.consent.screen: 'true'
        consent.screen.text: "${emailScopeConsentText}"
      protocolMappers:
      - id: 1ea36f02-3048-475f-85d4-ba664100d8a5
        name: email verified
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: emailVerified
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: email_verified
          jsonType.label: boolean
      - id: 1ec77b35-995c-4407-bf33-d717497657c1
        name: email
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: email
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: email
          jsonType.label: String
    - id: f1ad2651-24e7-4dde-8b3d-e458d02df40c
      name: offline_access
      description: 'OpenID Connect built-in scope: offline_access'
      protocol: openid-connect
      attributes:
        consent.screen.text: "${offlineAccessScopeConsentText}"
        display.on.consent.screen: 'true'
    - id: c7dc8cb5-de6d-47c6-953a-9f30dbedc3cc
      name: role_list
      description: SAML role list
      protocol: saml
      attributes:
        consent.screen.text: "${samlRoleListScopeConsentText}"
        display.on.consent.screen: 'true'
      protocolMappers:
      - id: d3019799-a111-4501-b396-cd705a8d686d
        name: role list
        protocol: saml
        protocolMapper: saml-role-list-mapper
        consentRequired: false
        config:
          single: 'false'
          attribute.nameformat: Basic
          attribute.name: Role
    - id: 918a7d4f-3574-4769-a41b-39a08a654505
      name: phone
      description: 'OpenID Connect built-in scope: phone'
      protocol: openid-connect
      attributes:
        include.in.token.scope: 'true'
        display.on.consent.screen: 'true'
        consent.screen.text: "${phoneScopeConsentText}"
      protocolMappers:
      - id: 74ebf025-0c36-48f8-87bf-d73c354f0028
        name: phone number
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: phoneNumber
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: phone_number
          jsonType.label: String
      - id: 7043ea27-eaea-4369-b1a7-a23de801f569
        name: phone number verified
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: phoneNumberVerified
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: phone_number_verified
          jsonType.label: boolean
    - id: '0904fc3e-78ba-4fe9-ab7e-9df3a22afe20'
      name: microprofile-jwt
      description: Microprofile - JWT built-in scope
      protocol: openid-connect
      attributes:
        include.in.token.scope: 'true'
        display.on.consent.screen: 'false'
      protocolMappers:
      - id: 27820216-f885-416a-915d-fe446f8b3376
        name: groups
        protocol: openid-connect
        protocolMapper: oidc-usermodel-realm-role-mapper
        consentRequired: false
        config:
          multivalued: 'true'
          user.attribute: foo
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: groups
          jsonType.label: String
      - id: 0a82a648-1c0c-4625-a872-7fcbf21f8dbe
        name: upn
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: 'true'
          user.attribute: username
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: upn
          jsonType.label: String
    - id: 21acfe10-2a25-4c6c-910c-57143a679e60
      name: address
      description: 'OpenID Connect built-in scope: address'
      protocol: openid-connect
      attributes:
        include.in.token.scope: 'true'
        display.on.consent.screen: 'true'
        consent.screen.text: "${addressScopeConsentText}"
      protocolMappers:
      - id: 7cb7d38a-b5d8-494f-a57e-576de0e5d0c1
        name: address
        protocol: openid-connect
        protocolMapper: oidc-address-mapper
        consentRequired: false
        config:
          user.attribute.formatted: formatted
          user.attribute.country: country
          user.attribute.postal_code: postal_code
          userinfo.token.claim: 'true'
          user.attribute.street: street
          id.token.claim: 'true'
          user.attribute.region: region
          access.token.claim: 'true'
          user.attribute.locality: locality
    - id: 0b91125e-d014-49a0-95a9-a9fa49199e0b
      name: web-origins
      description: OpenID Connect scope for add allowed web origins to the access token
      protocol: openid-connect
      attributes:
        include.in.token.scope: 'false'
        display.on.consent.screen: 'false'
        consent.screen.text: ''
      protocolMappers:
      - id: ba2c2468-de6d-467d-ada0-0e73d5b5ec27
        name: allowed web origins
        protocol: openid-connect
        protocolMapper: oidc-allowed-origins-mapper
        consentRequired: false
        config: {}
    - id: 2a5a94a0-df91-4a8c-b676-a519bc9e5cfd
      name: groups
      description: Groups
      protocol: openid-connect
      attributes:
        include.in.token.scope: 'true'
        display.on.consent.screen: 'true'
        gui.order: ''
        consent.screen.text: ''
      protocolMappers:
      - id: ddade498-fdd4-4ba8-822a-0c0a08243ccd
        name: groups
        protocol: openid-connect
        protocolMapper: oidc-group-membership-mapper
        consentRequired: false
        config:
          full.path: 'false'
          userinfo.token.claim: 'true'
          multivalued: 'true'
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: groups
    clients:
    - id: 2cc7ef7e-1a34-4caa-a4ec-9a3d08bf7dc8
      clientId: argocd
      name: Argo CD
      description: 'Argo CD'
      rootUrl: https://{{ $.Values.sub_domain }}
      adminUrl: https://{{ $.Values.sub_domain }}
      baseUrl: https://{{ $.Values.sub_domain }}
      surrogateAuthRequired: false
      enabled: true
      alwaysDisplayInConsole: false
      clientAuthenticatorType: client-secret
      redirectUris:
      - https://openshift-gitops-server-openshift-gitops.{{ $.Values.sub_domain }}/*
      - https://argocd-server-gitops.{{ $.Values.sub_domain }}/*
      - http://localhost:8085/auth/callback
      webOrigins:
      - "*"
      notBefore: 0
      bearerOnly: false
      consentRequired: false
      standardFlowEnabled: true
      implicitFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: false
      publicClient: true
      frontchannelLogout: true
      protocol: openid-connect
      attributes:
        client.secret.creation.time: '1690755514'
        oauth2.device.authorization.grant.enabled: 'false'
        backchannel.logout.revoke.offline.tokens: 'false'
        use.refresh.tokens: 'true'
        oidc.ciba.grant.enabled: 'false'
        backchannel.logout.session.required: 'true'
        client_credentials.use_refresh_token: 'false'
        tls.client.certificate.bound.access.tokens: 'false'
        require.pushed.authorization.requests: 'false'
        acr.loa.map: "{}"
        display.on.consent.screen: 'false'
        token.response.type.bearer.lower-case: 'false'
      authenticationFlowBindingOverrides: {}
      fullScopeAllowed: true
      nodeReRegistrationTimeout: -1
      defaultClientScopes:
      - web-origins
      - acr
      - profile
      - roles
      - groups
      - email
      optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt
    - id: 31c5e818-0aca-4ba5-b7ee-2266b9c70daf
      clientId: openshift
      name: openshift
      description: OpenShift Authentication
      rootUrl: https://{{ $.Values.sub_domain }}
      adminUrl: ''
      baseUrl: https://{{ $.Values.sub_domain }}
      surrogateAuthRequired: false
      enabled: true
      alwaysDisplayInConsole: false
      clientAuthenticatorType: client-secret
      secret: 75befbcf-75de-4933-aea7-e819921a83e1
      redirectUris:
      - https://oauth-openshift.{{ $.Values.sub_domain }}/*
      webOrigins:
      - "*"
      notBefore: 0
      bearerOnly: false
      consentRequired: false
      standardFlowEnabled: true
      implicitFlowEnabled: false
      directAccessGrantsEnabled: false
      serviceAccountsEnabled: false
      publicClient: false
      frontchannelLogout: true
      protocol: openid-connect
      attributes:
        client.secret.creation.time: '1690676233'
        post.logout.redirect.uris: https://console-openshift-console.{{ $.Values.sub_domain }}
        oauth2.device.authorization.grant.enabled: 'false'
        backchannel.logout.revoke.offline.tokens: 'false'
        use.refresh.tokens: 'true'
        oidc.ciba.grant.enabled: 'false'
        backchannel.logout.session.required: 'true'
        client_credentials.use_refresh_token: 'false'
        tls.client.certificate.bound.access.tokens: 'false'
        require.pushed.authorization.requests: 'false'
        acr.loa.map: "{}"
        display.on.consent.screen: 'false'
        token.response.type.bearer.lower-case: 'false'
      authenticationFlowBindingOverrides: {}
      fullScopeAllowed: true
      nodeReRegistrationTimeout: -1
      defaultClientScopes:
      - web-origins
      - acr
      - profile
      - roles
      - groups
      - email
      optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt
    - id: ee412f01-9d88-4cc3-8ce2-2c4d848d0c04
      clientId: acs
      name: acs
      description: ACS Authentication
      rootUrl: https://{{ $.Values.sub_domain }}
      adminUrl: ''
      baseUrl: https://{{ $.Values.sub_domain }}
      surrogateAuthRequired: false
      enabled: true
      alwaysDisplayInConsole: false
      clientAuthenticatorType: client-secret
      secret: 94395add-db2d-4564-bc40-fd9ed4f23cdf
      redirectUris:
      - https://central-stackrox.{{ $.Values.sub_domain }}/*
      webOrigins:
      - "*"
      notBefore: 0
      bearerOnly: false
      consentRequired: false
      standardFlowEnabled: true
      implicitFlowEnabled: false
      directAccessGrantsEnabled: false
      serviceAccountsEnabled: false
      publicClient: false
      frontchannelLogout: true
      protocol: openid-connect
      attributes:
        client.secret.creation.time: '1690676233'
        oauth2.device.authorization.grant.enabled: 'false'
        backchannel.logout.revoke.offline.tokens: 'false'
        use.refresh.tokens: 'true'
        oidc.ciba.grant.enabled: 'false'
        backchannel.logout.session.required: 'true'
        client_credentials.use_refresh_token: 'false'
        tls.client.certificate.bound.access.tokens: 'false'
        require.pushed.authorization.requests: 'false'
        acr.loa.map: "{}"
        display.on.consent.screen: 'false'
        token.response.type.bearer.lower-case: 'false'
      authenticationFlowBindingOverrides: {}
      fullScopeAllowed: true
      nodeReRegistrationTimeout: -1
      defaultClientScopes:
      - web-origins
      - acr
      - profile
      - roles
      - groups
      - email
      optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt
    - id: c240a1c3-fd24-49a1-b352-941492fa4832
      clientId: quay
      name: quay
      description: Quay Client
      rootUrl: https://https://registry-quay-quay-operator.{{ $.Values.sub_domain }}
      adminUrl: ''
      baseUrl: https://https://registry-quay-quay-operator.{{ $.Values.sub_domain }}
      surrogateAuthRequired: false
      enabled: true
      alwaysDisplayInConsole: false
      clientAuthenticatorType: client-secret
      secret: 5d71fc1a-feb8-4a9c-8eb9-1f5605c174bf
      redirectUris:
      - https://https://registry-quay-quay-operator.{{ $.Values.sub_domain }}/*
      webOrigins:
      - "*"
      notBefore: 0
      bearerOnly: false
      consentRequired: false
      standardFlowEnabled: true
      implicitFlowEnabled: false
      directAccessGrantsEnabled: false
      serviceAccountsEnabled: false
      publicClient: false
      frontchannelLogout: true
      protocol: openid-connect
      attributes:
        client.secret.creation.time: '1690676233'
        oauth2.device.authorization.grant.enabled: 'false'
        backchannel.logout.revoke.offline.tokens: 'false'
        use.refresh.tokens: 'true'
        oidc.ciba.grant.enabled: 'false'
        backchannel.logout.session.required: 'true'
        client_credentials.use_refresh_token: 'false'
        tls.client.certificate.bound.access.tokens: 'false'
        require.pushed.authorization.requests: 'false'
        acr.loa.map: "{}"
        display.on.consent.screen: 'false'
        token.response.type.bearer.lower-case: 'false'
      authenticationFlowBindingOverrides: {}
      fullScopeAllowed: true
      nodeReRegistrationTimeout: -1
      defaultClientScopes:
      - web-origins
      - acr
      - profile
      - roles
      - groups
      - email
      optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt
    groups:
      - id: developers
        name: developers
        path: /developers
      - id: cluster-admins
        name: cluster-admins
        path: /cluster-admins
    users:
      - id: clusteradmin
        username: clusteradmin
        enabled: true
        groups:
          - developers
          - cluster-admins
        credentials:
        - type: password
          hashedSaltedValue: 5Mhqu6I43dSlDqVzpbv5yVjMYrTKOY4mbTwJu+1B0SA=
          salt: rkNa/C8CumJNCka2cm5FtQ==
          hashIterations: 27500
          counter: 0
          algorithm: pbkdf2-sha256
          digits: 0
          period: 0
      - id: admin
        username: admin
        enabled: true
        groups:
          - developers
          - cluster-admins
        credentials:
        - type: password
          hashedSaltedValue: 5Mhqu6I43dSlDqVzpbv5yVjMYrTKOY4mbTwJu+1B0SA=
          salt: rkNa/C8CumJNCka2cm5FtQ==
          hashIterations: 27500
          counter: 0
          algorithm: pbkdf2-sha256
          digits: 0
          period: 0
{{- range untilStep 1 (int ($.Values.users | add 1)) 1 }}
      - id: user{{ . }}
        username: user{{ . }}
        enabled: true
        groups:
          - developers
        credentials:
        - type: password
          hashedSaltedValue: 5Mhqu6I43dSlDqVzpbv5yVjMYrTKOY4mbTwJu+1B0SA=
          salt: rkNa/C8CumJNCka2cm5FtQ==
          hashIterations: 27500
          counter: 0
          algorithm: pbkdf2-sha256
          digits: 0
          period: 0
{{- end }}
