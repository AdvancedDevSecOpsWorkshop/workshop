- hosts: localhost
  connection: local

  vars:
    users: 5
    gitops_deployments:
      - cluster
      - kam
      - openshift-gitops-applicationset-controller
      - openshift-gitops-redis
      - openshift-gitops-repo-server
      - openshift-gitops-server

  tasks:
    - name: Get Ingress from Cluster
      k8s_info:
        api_version: config.openshift.io/v1
        kind: Ingress
        name: cluster
        namespace: openshift-ingress
      register: ingress

    - name: Get sub_domain from ingress
      set_fact:
        sub_domain: "{{ ingress | json_query('resources[0].spec.domain')}}"

    - name: Create cluster-admins group
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: user.openshift.io/v1
          kind: Group
          metadata:
            name: cluster-admins
          users:
            - admin
            - opentlc-mgr

    - name: Create openshift-gitops-operator namespace
      kubernetes.core.k8s:
        name: openshift-gitops-operator
        api_version: v1
        kind: Namespace
        state: present

    - name: Create Operator Group
      kubernetes.core.k8s:
        state: present
        definition:
          api_version: operators.coreos.com/v1
          kind: OperatorGroup
          metadata:
            name: gitops
            namespace: openshift-gitops-operator
          spec:
            upgradeStrategy: Default

    - name: deploy-gitops-operator
      kubernetes.core.k8s:
        state: present
        src: "{{ item }}"
      loop: "{{ query('fileglob', 'files/gitops-operator/*.yaml') }}"

    - name: Sleep for 60 seconds
      wait_for:
        timeout: 60

    - name: Check that all deployments are up and running
      command: "oc rollout status deployment {{ item }} -n openshift-gitops"
      with_items: "{{ gitops_deployments }}"

    - name: Give application-controller cluster-admin permissions
      kubernetes.core.k8s:
        state: present
        src: files/gitops-operator/application-controller-rolebinding.yaml

    - name: Deploy gitops instance plugin
      kubernetes.core.k8s:
        state: present
        src: files/gitops-instance/{{ item }}
      with_items:
        - setenv-cmp-plugin-cm.yaml
        - argocd-oidc.yaml

    - name: Update openshift-gitops-instance
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'argocd-cr.yaml.j2') }}"

    - name: Sleep for 10 seconds
      wait_for:
        timeout: 10

    - name: Check that all deployments are up and running
      command: "oc rollout status deployment {{ item }} -n openshift-gitops"
      with_items: "{{ gitops_deployments }}"

    - name: Deploy appprojects
      kubernetes.core.k8s:
        state: present
        src: "{{ item }}"
      loop: "{{ query('fileglob', 'files/appprojects/*.yaml') }}"

    - name: Deploy infra applications
      kubernetes.core.k8s:
        state: present
        src: "{{ item }}"
      loop: "{{ query('fileglob', 'files/applications/*.yaml') }}"

    # Todo: Check health of apps
    - name: Wait 30 seconds for deployment
      wait_for:
        timeout: 30

    - name: Deploy ACS Configuration
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'acs-config-app.yaml.j2') }}"

    - name: Update shared GitOps
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'shared-gitops.yaml.j2') }}"

    - name: Update users applicationset
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'user-appset.yaml.j2') }}"
